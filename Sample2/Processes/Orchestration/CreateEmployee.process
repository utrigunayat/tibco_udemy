<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://www.tibco.com/schemas/Sample2/Resources/Schema/Processes/createEmployeeRequest.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx2="http://www.tibco.com/schemas/Sample2/Resources/Schema/Processes/createEmployeesResponse.xsd" xmlns:ns="http://www.tibco.com/schemas/Sample2/Resources/Schema/Model/Employee.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.tibco.com/schemas/Sample2/Resources/Schema/Processes/createEmployeeRequest.xsd" schemaLocation="/Resources/Schema/Processes/createEmployeeRequest.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/Sample2/Resources/Schema/Processes/createEmployeesResponse.xsd" schemaLocation="/Resources/Schema/Processes/createEmployeesResponse.xsd"/>
    <pd:name>Processes/Orchestration/CreateEmployee.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx:createEmployeeRequest"/>
    <pd:startX>147</pd:startX>
    <pd:startY>70</pd:startY>
    <pd:returnBindings>
        <pfx2:createEmployeesResponse>
            <pfx2:responseCode>
                <xsl:value-of select="200"/>
            </pfx2:responseCode>
            <pfx2:responseMessage>
                <xsl:value-of select="concat('Number of rows updated: ',count($accumulateJDBC/AccumulatedOutput/jdbcUpdateActivityOutput))"/>
            </pfx2:responseMessage>
        </pfx2:createEmployeesResponse>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx2:createEmployeesResponse"/>
    <pd:endX>749</pd:endX>
    <pd:endY>67</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1750507510115</pd:targetNamespace>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>364</pd:x>
        <pd:y>5</pd:y>
        <pd:width>147</pd:width>
        <pd:height>140</pd:height>
        <pd:collapsedWidth>52</pd:collapsedWidth>
        <pd:collapsedHeight>69</pd:collapsedHeight>
        <pd:groupVariables/>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Start/pfx:createEmployeeRequest/ns:Employees/ns:Employee/ns:id</pd:over>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:outSlot>accumulateJDBC</pd:outSlot>
            <pd:activityOutputName>JDBC Update</pd:activityOutputName>
            <pd:accumulateOutput>true</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>JDBC Update</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>JDBC Update</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="JDBC Update">
            <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
            <pd:x>428</pd:x>
            <pd:y>69</pd:y>
            <config>
                <timeout>10</timeout>
                <commit>false</commit>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/Resources/Connections/JDBC/JDBC Connection.sharedjdbc</jdbcSharedConfig>
                <statement>insert into customer1
(id,name,age,city,salary) 
values (?,?,?,?,?);</statement>
                <Prepared_Param_DataType>
                    <parameter>
                        <parameterName>id</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>name</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>age</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>city</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>salary</parameterName>
                        <dataType>NUMERIC</dataType>
                    </parameter>
                </Prepared_Param_DataType>
            </config>
            <pd:inputBindings>
                <jdbcUpdateActivityInput>
                    <id>
                        <xsl:value-of select="$Start/pfx:createEmployeeRequest/ns:Employees/ns:Employee[$i]/ns:id"/>
                    </id>
                    <name>
                        <xsl:value-of select="$Start/pfx:createEmployeeRequest/ns:Employees/ns:Employee[$i]/ns:name"/>
                    </name>
                    <age>
                        <xsl:value-of select="$Start/pfx:createEmployeeRequest/ns:Employees/ns:Employee[$i]/ns:age"/>
                    </age>
                    <city>
                        <xsl:choose>
                            <xsl:when test="exists($Start/pfx:createEmployeeRequest/ns:Employees/ns:Employee[$i]/ns:city)">
                                <xsl:value-of select="$Start/pfx:createEmployeeRequest/ns:Employees/ns:Employee[$i]/ns:city"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </city>
                    <salary>
                        <xsl:choose>
                            <xsl:when test="exists($Start/pfx:createEmployeeRequest/ns:Employees/ns:Employee[$i]/ns:salary)">
                                <xsl:value-of select="$Start/pfx:createEmployeeRequest/ns:Employees/ns:Employee[$i]/ns:salary"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </salary>
                </jdbcUpdateActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>